---
title: Andrew Lawton - Front-End Web Designer &amp; Developer
metaDescription:
metaKeywords:
bodyClass:
---

<!-- Swap sticky image on scroll https://codepen.io/redone75/pen/ExgwPdE -->


<style>
.threshold {
  position: sticky;
  width: 100%;
  height: 1px;
  background-color: red;
  z-index: 9999999999;
}

.threshold--top {
  top: 50%;
}

p, h1, h3 {
  font-family: sans-serif;
  line-height: 1.8;
  color: #666;
  font-size: 0.9rem;
  font-weight: 300;
}

h1 {
  font-size: 3rem;
  font-weight: 200;
  margin-bottom: 0;
}

h3 {
  font-size: 2.4rem;
  font-weight: 200;
  margin-bottom: 0;
}

.text {
  height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin: 0 auto;
}
.text p {
  width: 40%;
}

.image {
  opacity: 0;
  transition: all 0.5s ease;
}
.image.active {
  opacity: 1;
}

.locker {
  outline: 1px solid #cdcdcd;
  outline-offset: -1px;
  position: relative;
  display: grid;
  grid-template-columns: [full-start] minmax(4.2rem, 1fr) [center-start] repeat(12, [col-start] minmax(min-content, 8rem) [col-end]) [center-end] minmax(4.2rem, 1fr) [full-end];
}
.locker__image {
  position: relative;
  grid-column: col-start 2/col-end 6;
}
.locker__image img {
  width: auto;
  height: 70vh;
  position: absolute;
  transition: all 1s ease;
}
.locker__container {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
}
.locker__content {
  grid-column: col-start 8/center-end;
}
.locker__section {
  height: 100vh;
  display: flex;
  justify-content: center;
  flex-direction: column;
  border-top: 1px solid #cdcdcd;
}
.locker__section:first-child {
  border: none;
}
.locker__section p {
  width: 70%;
}

#message {
  position: fixed;
  top: 20px;
  left: 20px;
  background-color: white;
  height: auto;
  padding: 10px 20px;
  z-index: 900;
}

</style>

<main role="main" id="content">
  <div class="text">
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
</div>
<div class="locker">
  <div class="locker__image">
    <div class="locker__container">
      <img class="image image--1" src="https://assets.codepen.io/325536/placeimg_480_720_tech.jpg">
      <img class="image image--2" src="https://assets.codepen.io/325536/tech.jpeg">
      <img class="image image--3" src="https://assets.codepen.io/325536/tech-2.jpeg">
      <img class="image image--4" src="https://assets.codepen.io/325536/tech-3.jpeg">
    </div>
  </div>
  <div class="locker__content">
    <div class="locker__section locker__section--1 cb" data-swap="image--1">
      <h3>01</h3>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
    </div>
    <div class="locker__section locker__section--2 cb" data-swap="image--2">
      <h3>02</h3>
      <p class="">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
    </div>
    <div class="locker__section locker__section--3 cb" data-swap="image--3">
      <h3>03</h3>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
    </div>
    <div class="locker__section locker__section--4 cb" data-swap="image--4">
      <h3>04</h3>
      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
    </div>
  </div>
  <div class="threshold threshold--top"></div>
</div>
<div class="text">
  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
</div>
</main>

<script>

if(typeof window.IntersectionObserver !== 'undefined') {
  let options = {
    threshold: [0.5, 1]
  }
  const targets = document.querySelectorAll('.cb');
  const locker = document.querySelector('.locker__container');
  function handleIntersection(entries) {
    entries.map((entry) => {
      if (entry.isIntersecting) {
        entry.target.current = entry.target.dataset.swap;
        document.querySelector(".locker__container ." + entry.target.current).classList.add("active");
      } else {
        document.querySelector(".locker__container ." + entry.target.current).classList.remove("active");
      }
    });
  }
  const observer = new IntersectionObserver(handleIntersection, options);
  targets.forEach(target => observer.observe(target));
} else {
  // Fallback
}
</script>
